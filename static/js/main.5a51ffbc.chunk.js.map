{"version":3,"sources":["components/API/API.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["MY_KEY","BASE_URL","FetchAPI","searchInput","page","fetch","then","response","json","SearchBar","state","formSubmit","e","preventDefault","data","props","onSubmit","arrayImg","hits","finally","setState","inputForm","target","value","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","map","i","src","webformatURL","alt","tags","largeImageURL","id","ImageGallery","openModal","onClick","ButtonLoadMore","loader","loadMoreBtn","loadMore","color","height","width","timeout","modalRoot","document","querySelector","Modal","closeModalEsc","code","onClose","closeModalOverlay","nodeName","window","addEventListener","removeEventListener","createPortal","children","App","modalImg","showModal","moreImg","toggleModal","dataset","large","prevProps","prevState","length","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5a51ffbc.chunk.js","sourcesContent":["const MY_KEY = '23120149-b9b49e6d85d17734323f46136';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport default function FetchAPI(searchInput, page = 1) {\n  return fetch(\n    `${BASE_URL}?q=${searchInput}&page=${page}&key=${MY_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => response.json());\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FetchAPI from '../API/API';\n\nexport default class SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = {\n    searchInput: '',\n  };\n\n  formSubmit = e => {\n    e.preventDefault();\n    const { searchInput } = this.state;\n\n    FetchAPI(searchInput)\n      .then(data =>\n        this.props.onSubmit({\n          arrayImg: data.hits,\n          searchInput: searchInput,\n        }),\n      )\n      .finally(this.setState({ searchInput: '' }));\n  };\n\n  inputForm = ({ target }) => {\n    this.setState({\n      searchInput: target.value,\n    });\n  };\n\n  render() {\n    const { searchInput } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.formSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            value={searchInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.inputForm}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","export default function ImageGalleryItem({ arrayImg }) {\n  const markup = arrayImg.map(i => {\n    return (\n      <li className=\"ImageGalleryItem\" key={i.id}>\n        <img\n          src={i.webformatURL}\n          alt={i.tags}\n          className=\"ImageGalleryItem-image\"\n          data-large={i.largeImageURL}\n        />\n      </li>\n    );\n  });\n  return markup;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default class ImageGallery extends Component {\n  static propTypes = {\n    arrayImg: PropTypes.array,\n    openModal: PropTypes.func,\n  };\n\n  render() {\n    const { arrayImg, openModal } = this.props;\n\n    return (\n      <ul className=\"ImageGallery\" onClick={openModal}>\n        <ImageGalleryItem arrayImg={arrayImg} />\n      </ul>\n    );\n  }\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderCircle from '../Loader/Loader';\nimport FetchAPI from '../API/API';\n\nexport default class ButtonLoadMore extends Component {\n  static propTypes = {\n    searchInput: PropTypes.string,\n    loadMore: PropTypes.func,\n  };\n\n  state = {\n    page: 1,\n    loader: false,\n  };\n\n  loadMoreBtn = () => {\n    const { searchInput, loadMore } = this.props;\n    const { page } = this.state;\n\n    this.setState(({ loader }) => ({\n      loader: !loader,\n    }));\n\n    FetchAPI(searchInput, page + 1)\n      .then(data => loadMore(data.hits))\n      .then(\n        this.setState({\n          page: page + 1,\n        }),\n      )\n      .finally(\n        this.setState(({ loader }) => ({\n          loader: !loader,\n        })),\n      );\n  };\n\n  render() {\n    const { loader } = this.state;\n    if (loader) {\n      return LoaderCircle();\n    }\n\n    if (!loader) {\n      return (\n        <div className=\"Btn_load-more\">\n          <button className=\"Button\" type=\"button\" onClick={this.loadMoreBtn}>\n            Load more\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import Loader from 'react-loader-spinner';\n\nexport default function LoaderCircle() {\n  return (\n    <div className=\"Loader\">\n      <Loader\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={50}\n        width={50}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeModalEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeModalEsc);\n  }\n\n  closeModalEsc = ({ code }) => {\n    if (code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  closeModalOverlay = ({ target }) => {\n    if (target.nodeName !== 'IMG') {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.closeModalOverlay}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ButtonLoadMore from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    arrayImg: [],\n    modalImg: '',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { length } = prevState.arrayImg;\n    const { arrayImg } = this.state;\n\n    if (length !== arrayImg.length) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  onSubmit = ({ arrayImg, searchInput }) => {\n    this.setState({\n      arrayImg: arrayImg,\n      searchInput: searchInput,\n    });\n  };\n\n  loadMore = moreImg => {\n    const { arrayImg } = this.state;\n    this.setState({\n      arrayImg: [...arrayImg, ...moreImg],\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  openModal = e => {\n    const { dataset, nodeName } = e.target;\n\n    if (nodeName === 'IMG') {\n      this.setState(({ showModal }) => ({\n        modalImg: dataset.large,\n        showModal: !showModal,\n      }));\n    }\n  };\n\n  render() {\n    const { arrayImg, searchInput, showModal, modalImg } = this.state;\n\n    return (\n      <>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={modalImg} alt=\"\" />\n          </Modal>\n        )}\n        <SearchBar onSubmit={this.onSubmit} />\n        <ImageGallery arrayImg={arrayImg} openModal={this.openModal} />\n        {arrayImg.length !== 0 && (\n          <ButtonLoadMore searchInput={searchInput} loadMore={this.loadMore} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}